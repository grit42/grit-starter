services:
  db:
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=default
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    image: "grit42com/pgrdkit:16.3-2024.03.1"
    platform: linux/amd64
    restart: unless-stopped
    volumes:
      - grit_postgres_data:/var/lib/postgresql/data

  app:
    depends_on:
      - db
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GRIT_DATABASE=${GRIT_DATABASE}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_TOKEN=${SMTP_TOKEN}
      - SMTP_USER=${SMTP_USER}
      - GRIT_SERVER_URL=${GRIT_SERVER_URL}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    image: "grit42com/grit:latest"
    platform: linux/amd64
    restart: unless-stopped

  backup:
    profiles: ["tools"]
    image: "grit42com/pgrdkit:16.3-2024.03.1"
    depends_on:
      - db
    entrypoint: >
      bash -c "
      pg_dump -h db -U ${POSTGRES_USER} ${GRIT_DATABASE} > /backups/grit-db-backup.sql"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - GRIT_DATABASE=${GRIT_DATABASE}
    volumes:
      - ./grit-database-backups:/backups

  restore:
    profiles: ["tools"]
    image: "grit42com/pgrdkit:16.3-2024.03.1"
    depends_on:
      - db
    entrypoint: >
      bash -c "
      if [ -f /backups/grit-db-backup.sql ]; then
        echo 'Ensuring database ${GRIT_DATABASE} exists...';
        psql -h db -U ${POSTGRES_USER} -d postgres -c \"SELECT 1 FROM pg_database WHERE datname = '${GRIT_DATABASE}'\" | grep -q 1 || \
        psql -h db -U ${POSTGRES_USER} -d postgres -c \"CREATE DATABASE \\\"${GRIT_DATABASE}\\\"\";

        echo 'Restoring from backup...';
        psql -h db -U ${POSTGRES_USER} ${GRIT_DATABASE} < /backups/grit-db-backup.sql;
      else
        echo 'No backup file found at /backups/grit-db-backup.sql';
        exit 1;
      fi"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - GRIT_DATABASE=${GRIT_DATABASE}
    volumes:
      - ./grit-database-backups:/backups

volumes:
  grit_postgres_data:
    name: grit_postgres_data
